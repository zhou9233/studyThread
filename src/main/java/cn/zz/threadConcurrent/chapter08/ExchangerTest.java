package cn.zz.threadConcurrent.chapter08;import java.util.concurrent.Exchanger;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;/** *  * @author tengfei.fangtf * @version $Id: ExchangerTest.java, v 0.1 2015-8-1 ����12:10:37 tengfei.fangtf Exp $ */public class ExchangerTest {    private static final Exchanger<String> exgr       = new Exchanger<String>();    private static ExecutorService         threadPool = Executors.newFixedThreadPool(2);    public static void main(String[] args) {        threadPool.execute(new Runnable() {            @Override            public void run() {                try {                    String A = "流水A";// A录入                    String B = exgr.exchange(A);                    System.out.println(B);                } catch (InterruptedException e) {                }            }        });        threadPool.execute(new Runnable() {            @Override            public void run() {                try {                    String B = "流水B";// B录入                    String A = exgr.exchange(B);                    System.out.println("A和B是否一致" + A.equals(B) + " A录入的是 " + A + " B录入的是 " + B);                } catch (InterruptedException e) {                }            }        });        threadPool.shutdown();    }}